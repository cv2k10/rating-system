   <style>
        .container { max-width: 800px; margin-top: 50px; }
        .generated-url { word-break: break-all; }
        .nav-tabs { margin-bottom: 30px; }
        .nav-tabs .nav-item:first-child { min-width: 150px; }
        .select2-container { width: 100% !important; }
        .tab-icon { 
            display: inline-block;
            margin-right: 8px;
        }
        .brand-header {
            background: #fff;
            padding: 15px 30px;
            border-bottom: 1px solid #eee;
            margin-bottom: 20px;
        }
        .brand-title {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }
        .qr-code-container {
            text-align: center;
            padding-left: 20px;
            border-left: 1px solid #d1e7dd;
        }
        .qr-code-container canvas {
            width: 120px !important;
            height: 120px !important;
        }
        .result-content {
            display: flex;
            align-items: center;
        }
        .link-container {
            flex: 1;
            min-width: 0; /* Prevents flex item from overflowing */
        }
        .qr-hint {
            font-size: 12px;
            color: #6c757d;
            margin-top: 5px;
            margin-bottom: 0;
        }
        @media (max-width: 768px) {
            .tab-text { display: none; }
            .tab-icon { margin: 0; }
            .nav-tabs .nav-item:first-child { min-width: auto; }
            .result-content {
                flex-direction: column;
                align-items: stretch;
            }
            .qr-code-container {
                margin-top: 15px;
                padding-left: 0;
                padding-top: 15px;
                border-left: none;
                border-top: 1px solid #d1e7dd;
            }
        }
    </style>

    <div class="container">
        <h1 class="mb-4">Generate Rating Link</h1>
        <form id="generateForm" class="mb-4">
            <div class="mb-3">
                <label for="invoice_number" class="form-label">Invoice Number</label>
                <input type="text" class="form-control" id="invoice_number" required>
            </div>
            <div class="mb-3">
                <label for="invoice_date" class="form-label">Invoice Date</label>
                <input type="date" class="form-control" id="invoice_date" required>
            </div>
            <div class="mb-3">
                <label for="customer_id" class="form-label">Customer</label>
                <select class="form-select" id="customer_id" name="customer_id" required>
                    <option value="">Search and select customer...</option>
                    <% customers.forEach(customer => { %>
                        <option value="<%= customer.id %>"><%= customer.name %> (<%= customer.customer_id %>)</option>
                    <% }); %>
                </select>
            </div>
            <div class="mb-3">
                <label for="service_id" class="form-label">Service</label>
                <select class="form-select" id="service_id" required>
                    <option value="">Select Service</option>
                    <% services.forEach(service => { %>
                        <option value="<%= service.id %>"><%= service.name %></option>
                    <% }); %>
                </select>
            </div>
            <div class="mb-3">
                <label for="service_provider_id" class="form-label">Service Provider</label>
                <select class="form-select" id="service_provider_id" required>
                    <option value="">Select Provider</option>
                    <% providers.forEach(provider => { %>
                        <option value="<%= provider.id %>"><%= provider.name %></option>
                    <% }); %>
                </select>
            </div>
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-primary" id="generateBtn">Generate Link</button>
                <button type="button" class="btn btn-outline-secondary" id="clearBtn">Clear</button>
            </div>
        </form>

        <div id="error" class="alert alert-danger d-none"></div>

        <div id="result" class="d-none">
            <div class="alert alert-success">
                <h4 class="alert-heading">Customer Rating Page Generated</h4>
                <div class="result-content">
                    <div class="link-container">
                        <p class="mb-2">Share this link with your customer:</p>
                        <div class="d-flex align-items-center gap-2 mb-0">
                            <code id="generatedUrl" class="flex-grow-1" style="word-break: break-all;"></code>
                            <button id="copyBtn" class="btn btn-sm btn-outline-success">
                                <i class="fas fa-copy"></i> Copy
                            </button>
                        </div>
                    </div>
                    <div class="qr-code-container">
                        <div id="qrCode"></div>
                        <p class="qr-hint">Scan with phone camera</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Select2
            $('#customer_id').select2({
                theme: 'bootstrap-5',
                placeholder: 'Search and select customer...',
                allowClear: true
            });

            const generateForm = document.getElementById('generateForm');
            const generateBtn = document.getElementById('generateBtn');
            const clearBtn = document.getElementById('clearBtn');
            const qrCodeContainer = document.querySelector('.qr-code-container');
            
            // Restore saved form data and generated link
            const savedData = JSON.parse(localStorage.getItem('ratingFormData') || '{}');
            if (savedData.invoice_number) {
                document.getElementById('invoice_number').value = savedData.invoice_number;
                document.getElementById('invoice_date').value = savedData.invoice_date;
                // Initialize Select2 with saved value
                $('#customer_id').val(savedData.customer_id).trigger('change');
                document.getElementById('service_id').value = savedData.service_id;
                document.getElementById('service_provider_id').value = savedData.service_provider_id;
                
                if (savedData.generatedUrl) {
                    showGeneratedLink(savedData.generatedUrl);
                }
            }

            generateForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                generateBtn.disabled = true;
                const errorDiv = document.getElementById('error');
                errorDiv.classList.add('d-none');
                qrCodeContainer.style.display = 'none';
                
                try {
                    const formData = {
                        invoice_number: document.getElementById('invoice_number').value,
                        invoice_date: document.getElementById('invoice_date').value,
                        customer_id: document.getElementById('customer_id').value,
                        service_id: document.getElementById('service_id').value,
                        service_provider_id: document.getElementById('service_provider_id').value
                    };

                    const response = await fetch('/<%= adminPath %>/api/generate', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    });
                    
                    const data = await response.json();
                    if (!response.ok) {
                        throw new Error(data.error || 'Failed to generate link');
                    }
                    
                    // Save form data and generated URL
                    localStorage.setItem('ratingFormData', JSON.stringify({
                        ...formData,
                        generatedUrl: data.url
                    }));
                    
                    showGeneratedLink(data.url);
                } catch (error) {
                    errorDiv.textContent = error.message;
                    errorDiv.classList.remove('d-none');
                } finally {
                    generateBtn.disabled = false;
                }
            });

            clearBtn.addEventListener('click', function() {
                // Clear form fields
                document.getElementById('invoice_number').value = '';
                document.getElementById('invoice_date').value = '';
                $('#customer_id').val(null).trigger('change');
                document.getElementById('service_id').value = '';
                document.getElementById('service_provider_id').value = '';
                document.getElementById('result').classList.add('d-none');
                document.getElementById('error').classList.add('d-none');
                
                // Clear QR code
                const qrCode = document.getElementById('qrCode');
                qrCode.innerHTML = '';
                qrCodeContainer.style.display = 'none';
                
                // Clear localStorage
                localStorage.removeItem('ratingFormData');
            });
        });

        function showGeneratedLink(url) {
            const resultDiv = document.getElementById('result');
            const qrCodeContainer = document.querySelector('.qr-code-container');
            document.getElementById('generatedUrl').textContent = url;
            document.getElementById('copyBtn').onclick = () => {
                navigator.clipboard.writeText(url);
                alert('URL copied to clipboard!');
            };
            
            // Generate QR code
            const qrCode = document.getElementById('qrCode');
            qrCode.innerHTML = ''; // Clear previous QR code
            
            try {
                new QRCode(qrCode, {
                    text: url,
                    width: 200,
                    height: 200,
                    colorDark: "#000000",
                    colorLight: "#ffffff",
                    correctLevel: QRCode.CorrectLevel.H
                });
                
                // Show containers
                resultDiv.classList.remove('d-none');
                qrCodeContainer.style.display = 'block';
            } catch (error) {
                console.error('Error generating QR code:', error);
                qrCodeContainer.style.display = 'none';
            }
        }
    </script>