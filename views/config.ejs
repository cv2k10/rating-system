<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Configuration - Rating System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .container-fluid { margin-top: 30px; padding: 0 30px; }
        .nav-tabs { margin-bottom: 20px; }
        .config-section { margin-bottom: 30px; }
        .config-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #dee2e6;
        }
        .config-item:last-child { border-bottom: none; }
        .config-actions { margin-left: auto; }
        .inactive { color: #6c757d; }
    </style>
</head>
<body>
    <div class="container-fluid">
        <nav>
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link" href="/<%= adminPath %>">Generate Rating Link</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/<%= adminPath %>/dashboard">Ratings Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/<%= adminPath %>/config">Configuration</a>
                </li>
            </ul>
        </nav>

        <h1 class="mb-4">System Configuration</h1>

        <!-- Customers Configuration -->
        <div class="config-section">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2>Customers</h2>
                <button class="btn btn-primary" onclick="showAddModal('customer')">
                    <i class="fas fa-plus"></i> Add Customer
                </button>
            </div>
            <div class="card">
                <div class="card-body">
                    <div id="customersList">
                        <% customers.forEach(customer => { %>
                            <div class="config-item <%= customer.is_active ? '' : 'inactive' %>" data-id="<%= customer.id %>">
                                <div>
                                    <strong class="me-2"><%= customer.customer_id %></strong>
                                    <span class="item-name"><%= customer.name %></span>
                                </div>
                                <div class="config-actions">
                                    <button class="btn btn-sm btn-outline-primary me-2" 
                                            onclick="showAddModal('customer', '<%= customer.id %>', '<%= customer.name %>', '<%= customer.customer_id %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm <%= customer.is_active ? 'btn-outline-danger' : 'btn-outline-success' %>"
                                            onclick="toggleItem('customer', '<%= customer.id %>', <%= customer.is_active %>)">
                                        <i class="fas fa-<%= customer.is_active ? 'times' : 'check' %>"></i>
                                    </button>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Services Configuration -->
        <div class="config-section">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2>Services</h2>
                <button class="btn btn-primary" onclick="showAddModal('service')">
                    <i class="fas fa-plus"></i> Add Service
                </button>
            </div>
            <div class="card">
                <div class="card-body">
                    <div id="servicesList">
                        <% services.forEach(service => { %>
                            <div class="config-item <%= service.is_active ? '' : 'inactive' %>" data-id="<%= service.id %>">
                                <span class="item-name"><%= service.name %></span>
                                <div class="config-actions">
                                    <button class="btn btn-sm btn-outline-primary" onclick="showAddModal('service', <%= service.id %>, '<%= service.name %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="toggleItem('service', <%= service.id %>, <%= service.is_active %>)">
                                        <i class="fas fa-<%= service.is_active ? 'trash' : 'undo' %>"></i>
                                    </button>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Service Providers Configuration -->
        <div class="config-section">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2>Service Providers</h2>
                <button class="btn btn-primary" onclick="showAddModal('provider')">
                    <i class="fas fa-plus"></i> Add Provider
                </button>
            </div>
            <div class="card">
                <div class="card-body">
                    <div id="providersList">
                        <% providers.forEach(provider => { %>
                            <div class="config-item <%= provider.is_active ? '' : 'inactive' %>" data-id="<%= provider.id %>">
                                <span class="item-name"><%= provider.name %></span>
                                <div class="config-actions">
                                    <button class="btn btn-sm btn-outline-primary" onclick="showAddModal('provider', <%= provider.id %>, '<%= provider.name %>')">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="toggleItem('provider', <%= provider.id %>, <%= provider.is_active %>)">
                                        <i class="fas fa-<%= provider.is_active ? 'trash' : 'undo' %>"></i>
                                    </button>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add/Edit Modal -->
    <div class="modal fade" id="configModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="configForm">
                        <input type="hidden" id="itemType">
                        <input type="hidden" id="itemId">
                        <div id="customerFields" class="mb-3 d-none">
                            <div class="mb-3">
                                <label for="customerId" class="form-label">Customer ID</label>
                                <input type="text" class="form-control" id="customerId" required>
                            </div>
                            <div class="mb-3">
                                <label for="customerName" class="form-label">Customer Name</label>
                                <input type="text" class="form-control" id="customerName" required>
                            </div>
                        </div>
                        <div id="otherFields" class="mb-3 d-none">
                            <label for="itemName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="itemName" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveItem()">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Modal instance
        let configModal;
        
        document.addEventListener('DOMContentLoaded', function() {
            configModal = new bootstrap.Modal(document.getElementById('configModal'));
            
            // Handle form submission
            document.getElementById('configForm').addEventListener('submit', function(e) {
                e.preventDefault();
                saveItem();
            });
        });

        function showAddModal(type, id = null, name = '', customer_id = '') {
            currentType = type;
            currentId = id;
            
            // Reset form
            document.getElementById('configForm').reset();
            
            // Update modal title
            document.getElementById('modalTitle').textContent = `${id ? 'Edit' : 'Add'} ${type.charAt(0).toUpperCase() + type.slice(1)}`;
            
            // Show/hide appropriate fields
            if (type === 'customer') {
                document.getElementById('customerFields').classList.remove('d-none');
                document.getElementById('otherFields').classList.add('d-none');
                if (id) {
                    document.getElementById('customerId').value = customer_id;
                    document.getElementById('customerName').value = name;
                }
            } else {
                document.getElementById('customerFields').classList.add('d-none');
                document.getElementById('otherFields').classList.remove('d-none');
                if (id) document.getElementById('itemName').value = name;
            }
            
            configModal.show();
        }

        async function saveItem() {
            const type = currentType;
            const id = currentId;
            let data = {};
            
            if (type === 'customer') {
                data = {
                    customer_id: document.getElementById('customerId').value,
                    name: document.getElementById('customerName').value
                };
            } else {
                data = {
                    name: document.getElementById('itemName').value
                };
            }

            try {
                const url = id 
                    ? `/<%= adminPath %>/api/config/${type}/${id}`
                    : `/<%= adminPath %>/api/config/${type}`;
                
                const response = await fetch(url, {
                    method: id ? 'PUT' : 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to save item');
                }

                configModal.hide();
                window.location.reload();
            } catch (error) {
                alert(error.message);
            }
        }

        async function toggleItem(type, id, currentStatus) {
            if (!confirm(`Are you sure you want to ${currentStatus ? 'deactivate' : 'activate'} this item?`)) return;

            try {
                const response = await fetch(`/<%= adminPath %>/api/config/${type}/${id}/toggle`, {
                    method: 'POST'
                });

                if (!response.ok) throw new Error('Failed to toggle item status');
                
                window.location.reload();
            } catch (error) {
                console.error('Error:', error);
                alert('Error toggling item status');
            }
        }
    </script>
</body>
</html>
