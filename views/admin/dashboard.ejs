    <style>
        .brand-header {
            background: #fff;
            padding: 15px 30px;
            border-bottom: 1px solid #eee;
            margin-bottom: 20px;
        }
        .brand-title {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            margin: 0;
        }
        .rating-breakdown {
            text-align: center;
            padding: 30px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        .rating-breakdown h2 {
            font-size: 48px;
            margin: 20px 0;
        }
        .rating-breakdown .total-ratings {
            color: #666;
            margin-bottom: 30px;
        }
        .star-row {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 10px 0;
            gap: 10px;
        }
        .star {
            color: #ffc107;
        }
        .empty-star {
            color: #e4e5e9;
        }
        .rating-count {
            min-width: 30px;
            text-align: center;
        }
        .filters {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        .ratings-table {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .table th {
            border-top: none;
            background: #f8f9fa;
            cursor: pointer;
        }
        .table th:hover {
            background: #e9ecef;
        }
        .status-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
        }
        .status-pending {
            background: #fff3cd;
            color: #856404;
        }
        .status-submitted {
            background: #d4edda;
            color: #155724;
        }
        .export-btn {
            float: right;
            margin-bottom: 20px;
        }
        .sort-icon {
            margin-left: 5px;
            opacity: 0.3;
        }
        .sort-icon.active {
            opacity: 1;
        }
        .question-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
        }
        .question-rating {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
    </style>

    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Ratings Dashboard</h2>
            <button class="btn btn-success export-btn">
                <i class="fas fa-download"></i> Export to CSV
            </button>
        </div>

        <div class="rating-breakdown">
            <h3>Rating Breakdown (All Service Providers)</h3>
            <h2><%= stats.avg_rating %> / 5.0</h2>
            <div class="total-ratings">(<%= stats.total %> ratings)</div>

            <div class="star-rows">
                <div class="star-row">
                    <% for(let i = 0; i < 5; i++) { %>
                        <i class="fas fa-star star"></i>
                    <% } %>
                    <span class="rating-count"><%= stats.five_star %></span>
                </div>
                <div class="star-row">
                    <% for(let i = 0; i < 4; i++) { %>
                        <i class="fas fa-star star"></i>
                    <% } %>
                    <i class="fas fa-star empty-star"></i>
                    <span class="rating-count"><%= stats.four_star %></span>
                </div>
                <div class="star-row">
                    <% for(let i = 0; i < 3; i++) { %>
                        <i class="fas fa-star star"></i>
                    <% } %>
                    <% for(let i = 0; i < 2; i++) { %>
                        <i class="fas fa-star empty-star"></i>
                    <% } %>
                    <span class="rating-count"><%= stats.three_star %></span>
                </div>
                <div class="star-row">
                    <% for(let i = 0; i < 2; i++) { %>
                        <i class="fas fa-star star"></i>
                    <% } %>
                    <% for(let i = 0; i < 3; i++) { %>
                        <i class="fas fa-star empty-star"></i>
                    <% } %>
                    <span class="rating-count"><%= stats.two_star %></span>
                </div>
                <div class="star-row">
                    <i class="fas fa-star star"></i>
                    <% for(let i = 0; i < 4; i++) { %>
                        <i class="fas fa-star empty-star"></i>
                    <% } %>
                    <span class="rating-count"><%= stats.one_star %></span>
                </div>
            </div>
        </div>

        <div class="rating-breakdown">
            <h3>Rating Breakdown by Question</h3>
            <div class="question-grid">
                <% questionStats.forEach(function(question) { %>
                <div class="question-rating">
                    <h4 class="mb-3"><%= question.title || question.question %></h4>
                    <h2><%= question.avg_rating.toFixed(1) %> / 5.0</h2>
                    <div class="total-ratings">(<%= question.total_responses %> responses)</div>
                    <div class="star-rows">
                        <% [5,4,3,2,1].forEach(function(stars) { %>
                        <div class="star-row">
                            <% Array(stars).fill().forEach(function() { %>
                            <i class="fas fa-star star"></i>
                            <% }); %>
                            <% Array(5-stars).fill().forEach(function() { %>
                            <i class="fas fa-star empty-star"></i>
                            <% }); %>
                            <span class="rating-count"><%= question.distribution[stars] || 0 %></span>
                        </div>
                        <% }); %>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>

        <div class="filters">
            <div class="row g-3">
                <div class="col-md-3">
                    <input type="text" class="form-control" id="search" 
                           placeholder="Search by customer name, ID, or invoice" 
                           value="<%= filters.search %>">
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="status">
                        <option value="">All Status</option>
                        <option value="submitted" <%= filters.status === 'submitted' ? 'selected' : '' %>>Submitted</option>
                        <option value="pending" <%= filters.status === 'pending' ? 'selected' : '' %>>Pending</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <input type="date" class="form-control" id="dateFrom" value="<%= filters.dateFrom %>">
                </div>
                <div class="col-md-2">
                    <input type="date" class="form-control" id="dateTo" value="<%= filters.dateTo %>">
                </div>
                <div class="col-md-2">
                    <select class="form-select" id="serviceBy">
                        <option value="">All Service Providers</option>
                        <% providers.forEach(function(provider) { %>
                            <option value="<%= provider.name %>" 
                                    <%= filters.serviceBy === provider.name ? 'selected' : '' %>>
                                <%= provider.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                <div class="col-md-1">
                    <button class="btn btn-primary w-100" id="filterBtn">Filter</button>
                </div>
            </div>
            <button class="btn btn-link mt-2" id="resetFilters">Reset Filters</button>
        </div>

        <div class="ratings-table">
            <table class="table">
                <thead>
                    <tr>
                        <th data-sort="invoice_number">Invoice # <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="invoice_date">Date <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="customer_name">Customer <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="service_name">Service <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="provider_name">Service By <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="rating">Rating <i class="fas fa-sort sort-icon"></i></th>
                        <th>Review</th>
                        <th data-sort="is_submitted">Status <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="created_at">Created <i class="fas fa-sort sort-icon"></i></th>
                        <th data-sort="submitted_at">Submitted <i class="fas fa-sort sort-icon"></i></th>
                    </tr>
                </thead>
                <tbody>
                    <% ratings.forEach(function(rating) { %>
                        <tr>
                            <td><%= rating.invoice_number %></td>
                            <td><%= formatDate(rating.invoice_date) %></td>
                            <td><%= rating.customer_name %> (<%= rating.customer_id %>)</td>
                            <td><%= rating.service_name %></td>
                            <td><%= rating.provider_name %></td>
                            <td>
                                <% if (rating.rating) { %>
                                    <% 
                                        const fullStars = Math.floor(rating.rating);
                                        const hasHalfStar = rating.rating % 1 >= 0.5;
                                    %>
                                    <% for(let i = 0; i < fullStars; i++) { %>
                                        <i class="fas fa-star star"></i>
                                    <% } %>
                                    <% if (hasHalfStar) { %>
                                        <i class="fas fa-star-half-alt star"></i>
                                    <% } %>
                                    <% for(let i = Math.ceil(rating.rating); i < 5; i++) { %>
                                        <i class="fas fa-star empty-star"></i>
                                    <% } %>
                                    (<%= rating.rating %>)
                                <% } else { %>
                                    -
                                <% } %>
                            </td>
                            <td><%= rating.review_text || '-' %></td>
                            <td>
                                <% if (rating.is_submitted) { %>
                                    <span class="status-badge status-submitted">Submitted</span>
                                <% } else { %>
                                    <span class="status-badge status-pending">Pending</span>
                                <% } %>
                            </td>
                            <td><%= formatDate(rating.created_at) %></td>
                            <td><%= formatDate(rating.submitted_at) %></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Sorting functionality
        const getCellValue = (tr, idx) => {
            const cell = tr.children[idx];
            if (!cell) return '';
            const text = cell.innerText || cell.textContent;
            return isNaN(text) ? text.toLowerCase() : parseFloat(text);
        };

        const comparer = (idx, asc) => (a, b) => {
            const v1 = getCellValue(asc ? a : b, idx);
            const v2 = getCellValue(asc ? b : a, idx);
            return v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) 
                ? v1 - v2 
                : v1.toString().localeCompare(v2);
        };

        document.querySelectorAll('th').forEach(th => {
            if (!th.dataset.sort) return;
            
            th.addEventListener('click', () => {
                const table = th.closest('table');
                const tbody = table.querySelector('tbody');
                const rows = Array.from(tbody.querySelectorAll('tr'));
                const thIndex = Array.from(th.parentElement.children).indexOf(th);
                const currentIcon = th.querySelector('.sort-icon');
                
                // Reset all other sort icons
                document.querySelectorAll('th .sort-icon').forEach(icon => {
                    if (icon !== currentIcon) {
                        icon.className = 'fas fa-sort sort-icon';
                    }
                });
                
                let isAscending;
                // Determine sort direction based on current icon state
                if (currentIcon.classList.contains('fa-sort')) {
                    isAscending = true;
                    currentIcon.className = 'fas fa-sort-up sort-icon active';
                } else if (currentIcon.classList.contains('fa-sort-up')) {
                    isAscending = false;
                    currentIcon.className = 'fas fa-sort-down sort-icon active';
                } else {
                    // Reset to unsorted state
                    currentIcon.className = 'fas fa-sort sort-icon';
                    // Restore original order by sorting by first column ascending
                    rows.sort(comparer(0, true));
                    tbody.append(...rows);
                    return;
                }
                
                // Sort the rows
                rows.sort(comparer(thIndex, isAscending));
                tbody.append(...rows);
            });
        });

        // Filter functionality
        document.getElementById('filterBtn').addEventListener('click', function() {
            const search = document.getElementById('search').value;
            const status = document.getElementById('status').value;
            const dateFrom = document.getElementById('dateFrom').value;
            const dateTo = document.getElementById('dateTo').value;
            const serviceBy = document.getElementById('serviceBy').value;

            const params = new URLSearchParams({
                search: search,
                status: status,
                dateFrom: dateFrom,
                dateTo: dateTo,
                serviceBy: serviceBy
            });

            window.location.href = `/<%= ADMIN_PATH %>/dashboard?${params.toString()}`;
        });

        document.getElementById('resetFilters').addEventListener('click', function() {
            window.location.href = `/<%= ADMIN_PATH %>/dashboard`;
        });

        document.querySelector('.export-btn').addEventListener('click', function() {
            const params = new URLSearchParams(window.location.search);
            params.append('export', 'csv');
            window.location.href = `/<%= ADMIN_PATH %>/export-ratings?${params.toString()}`;
        });
    </script>
